pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        echo 'Checkout stage'
        // Uncomment and configure the Git checkout command as needed
        // git branch: 'main', url: 'https://github.com/spurthiami/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        echo 'Listing files'
        sh 'ls -ltr'
        // Build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.82.217.153:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          echo 'Running static code analysis'
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "spurthiami/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          echo 'Building Docker image'
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            echo 'Pushing Docker image to registry'
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "Spurthiami"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          echo "GITHUB_TOKEN is set"
          sh 'git config user.email "spurthiami@gmail.com"'
          sh 'git config user.name "Spurthiami"'
          sh 'sed -i s/replaceImageTag/25/g java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml'
          sh 'git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml'
          sh 'git commit -m "Update deployment image to version ${BUILD_NUMBER}"'
          sh 'git push https://$GITHUB_TOKEN@github.com/Spurthiami/Jenkins-Zero-To-Hero HEAD:main'
        }
      }
    }
  }
}
